import { constructStack } from "@aws-sdk/middleware-stack";
import { HttpRequest } from "@aws-sdk/protocol-http";
const output = { Data: "data", $metadata: {} };
const input = { String: "input" };
export const fooClient = {
    config: {},
    middlewareStack: constructStack(),
    send: (command) => command.resolveMiddleware(fooClient.middlewareStack, fooClient.config, undefined)({ input }),
    destroy: () => { },
};
export const operationCommand = {
    middlewareStack: constructStack(),
    input: {},
    resolveMiddleware: (stack) => {
        const concatStack = stack.concat(operationCommand.middlewareStack);
        return concatStack.resolve(() => Promise.resolve({ output, response: {} }), {});
    },
};
export const httpRequest = new HttpRequest({
    protocol: "https:",
    path: "/foo",
    hostname: "foo-service.us-east-1.amazonaws.com",
    headers: {},
    method: "GET",
    body: "",
});
